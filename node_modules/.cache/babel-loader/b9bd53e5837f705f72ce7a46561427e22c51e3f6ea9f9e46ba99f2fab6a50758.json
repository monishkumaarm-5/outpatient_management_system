{"ast":null,"code":"var _jsxFileName = \"D:\\\\Infosys project\\\\Infosys project\\\\Infosys  E-doctor (2)\\\\Infosys  E-doctor\\\\src\\\\components\\\\Doctordashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Doctordashboard.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doctordashboard = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"\"); // To toggle between tabs\n  const [profileData, setProfileData] = useState(null); // Store doctor profile\n  const [availabilityList, setAvailabilityList] = useState([]); // Store doctor's availability\n  const [userId, setUserId] = useState(\"\"); // Stores the userId dynamically from login response\n  const [profileFormData, setProfileFormData] = useState({\n    doctorId: \"\",\n    doctorName: \"\",\n    speciality: \"\",\n    location: \"\",\n    mobileNo: \"\",\n    email: \"\",\n    experience: \"\",\n    password: \"\"\n  });\n  const [availabilityFormData, setAvailabilityFormData] = useState({\n    doctorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    fromTime: \"\",\n    toTime: \"\",\n    index: null // Track the index of the item to edit\n  });\n  const handleLogout = () => {\n    alert(\"Logged out successfully!\");\n    window.location.href = \"/login\"; // Redirect to login page\n  };\n  const handleProfileFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfileFormData({\n      ...profileFormData,\n      [name]: value\n    });\n  };\n  const handleAvailabilityFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAvailabilityFormData({\n      ...availabilityFormData,\n      [name]: value\n    });\n  };\n\n  // Get the userId dynamically from the login response\n  useEffect(() => {\n    const fetchLoginResponse = async () => {\n      try {\n        const loginResponse = await axios.post(\"http://localhost:8000/loginUser\", {\n          username: \"test-user\",\n          // Replace with actual username\n          password: \"test-password\" // Replace with actual password\n        });\n        console.log(\"Login response:\", loginResponse.data);\n        if (loginResponse.data && loginResponse.data.userId) {\n          setUserId(loginResponse.data.userId); // Dynamically set userId from response\n        }\n      } catch (error) {\n        console.error(\"Error fetching login response:\", error);\n      }\n    };\n    fetchLoginResponse();\n  }, []);\n\n  // Fetch doctor profile data based on userId\n  useEffect(() => {\n    if (userId) {\n      axios.get(`http://localhost:8000/doctor/getDoctorByEmail?email=${userId}`) // Use userId as email\n      .then(response => {\n        setProfileData(response.data); // Populate profile data\n      }).catch(error => {\n        console.error(\"Error fetching profile data:\", error);\n      });\n    }\n  }, [userId]);\n\n  // Handle form submission to save or update the doctor's profile\n  const handleProfileSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8000/doctor/addDoctor\", profileFormData);\n      console.log(\"Response from backend:\", response.data);\n\n      // Clear the form after successful submission\n      setProfileFormData({\n        doctorId: \"\",\n        doctorName: \"\",\n        speciality: \"\",\n        location: \"\",\n        mobileNo: \"\",\n        email: \"\",\n        experience: \"\",\n        password: \"\"\n      });\n\n      // Set active tab to show updated profile\n      setActiveTab(\"doctorProfile\");\n\n      // Refetch profile data to reflect changes\n      if (userId) {\n        axios.get(`http://localhost:8000/doctor/getDoctorByEmail?email=${userId}`).then(response => setProfileData(response.data)).catch(error => console.error(\"Error refetching profile data:\", error));\n      }\n    } catch (error) {\n      console.error(\"Error submitting profile data:\", error);\n    }\n  };\n  const handleAddAvailabilitySubmit = async e => {\n    e.preventDefault();\n    try {\n      // Add new availability to the backend\n      const response = await axios.post(\"http://localhost:8000/availability/addAvailability\", availabilityFormData);\n      console.log(\"Added Availability Response:\", response.data); // Log response from backend\n\n      // Reset the form after submission\n      setAvailabilityFormData({\n        doctorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        fromTime: \"\",\n        toTime: \"\",\n        index: null\n      });\n      setActiveTab(\"\"); // Reset view\n    } catch (error) {\n      console.error(\"Error submitting availability data:\", error);\n    }\n  };\n  const handleEditProfile = () => {\n    setProfileFormData(profileData); // Load existing profile data into the form\n    setActiveTab(\"createProfile\"); // Open the profile creation form to edit\n  };\n  const handleDeleteProfile = () => {\n    if (window.confirm(\"Are you sure you want to delete your profile?\")) {\n      setProfileData(null);\n      alert(\"Profile deleted successfully!\");\n    }\n  };\n  const handleEditAvailability = index => {\n    setAvailabilityFormData({\n      ...availabilityList[index],\n      index: index // Track the index of the availability to be edited\n    });\n    setActiveTab(\"addAvailability\"); // Open the availability form to edit\n  };\n  const handleDeleteAvailability = index => {\n    if (window.confirm(\"Are you sure you want to delete this availability?\")) {\n      const updatedList = availabilityList.filter((_, i) => i !== index);\n      setAvailabilityList(updatedList);\n      alert(\"Availability deleted successfully!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"Dashboard\"),\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), profileData ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"doctorProfile\"),\n        children: \"Doctor Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"createProfile\"),\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), availabilityList.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"viewAvailability\"),\n        children: \"View Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"addAvailability\"),\n        children: \"Add Availability\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Doctor Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), activeTab === \"createProfile\" && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleProfileSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"doctorName\",\n          placeholder: \"Name\",\n          value: profileFormData.doctorName,\n          onChange: handleProfileFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"speciality\",\n          placeholder: \"Speciality\",\n          value: profileFormData.speciality,\n          onChange: handleProfileFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"location\",\n          placeholder: \"Location\",\n          value: profileFormData.location,\n          onChange: handleProfileFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"mobileNo\",\n          placeholder: \"Mobile No\",\n          value: profileFormData.mobileNo,\n          onChange: handleProfileFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: profileFormData.email,\n          onChange: handleProfileFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"experience\",\n          placeholder: \"Experience\",\n          value: profileFormData.experience,\n          onChange: handleProfileFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: profileFormData.password,\n          onChange: handleProfileFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), activeTab === \"doctorProfile\" && profileData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Doctor Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", profileData.doctorName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Speciality: \", profileData.speciality]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Location: \", profileData.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile No: \", profileData.mobileNo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", profileData.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Experience: \", profileData.experience, \" years\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditProfile,\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeleteProfile,\n          children: \"Delete Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), activeTab === \"addAvailability\" && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddAvailabilitySubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"startDate\",\n          placeholder: \"Start Date (YYYY-MM-DD)\",\n          value: availabilityFormData.startDate,\n          onChange: handleAvailabilityFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"endDate\",\n          placeholder: \"End Date (YYYY-MM-DD)\",\n          value: availabilityFormData.endDate,\n          onChange: handleAvailabilityFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"fromTime\",\n          placeholder: \"From Time\",\n          value: availabilityFormData.fromTime,\n          onChange: handleAvailabilityFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"toTime\",\n          placeholder: \"To Time\",\n          value: availabilityFormData.toTime,\n          onChange: handleAvailabilityFormChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [availabilityFormData.index !== null ? \"Update\" : \"Add\", \" Availability\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), activeTab === \"viewAvailability\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Availability List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: availabilityList.map((availability, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [availability.startDate, \" to \", availability.endDate, \" (\", availability.fromTime, \" - \", availability.toTime, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditAvailability(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteAvailability(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Doctordashboard, \"8RScpIR14jGBHDoUCL2tG+vksLw=\");\n_c = Doctordashboard;\nexport default Doctordashboard;\nvar _c;\n$RefreshReg$(_c, \"Doctordashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Doctordashboard","_s","activeTab","setActiveTab","profileData","setProfileData","availabilityList","setAvailabilityList","userId","setUserId","profileFormData","setProfileFormData","doctorId","doctorName","speciality","location","mobileNo","email","experience","password","availabilityFormData","setAvailabilityFormData","startDate","endDate","fromTime","toTime","index","handleLogout","alert","window","href","handleProfileFormChange","e","name","value","target","handleAvailabilityFormChange","fetchLoginResponse","loginResponse","post","username","console","log","data","error","get","then","response","catch","handleProfileSubmit","preventDefault","handleAddAvailabilitySubmit","handleEditProfile","handleDeleteProfile","confirm","handleEditAvailability","handleDeleteAvailability","updatedList","filter","_","i","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","onSubmit","type","placeholder","onChange","required","map","availability","_c","$RefreshReg$"],"sources":["D:/Infosys project/Infosys project/Infosys  E-doctor (2)/Infosys  E-doctor/src/components/Doctordashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Doctordashboard.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Doctordashboard = () => {\r\n  const [activeTab, setActiveTab] = useState(\"\"); // To toggle between tabs\r\n  const [profileData, setProfileData] = useState(null); // Store doctor profile\r\n  const [availabilityList, setAvailabilityList] = useState([]); // Store doctor's availability\r\n  const [userId, setUserId] = useState(\"\"); // Stores the userId dynamically from login response\r\n  const [profileFormData, setProfileFormData] = useState({\r\n    doctorId: \"\",\r\n    doctorName: \"\",\r\n    speciality: \"\",\r\n    location: \"\",\r\n    mobileNo: \"\",\r\n    email: \"\",\r\n    experience: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [availabilityFormData, setAvailabilityFormData] = useState({\r\n    doctorId: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    fromTime: \"\",\r\n    toTime: \"\",\r\n    index: null, // Track the index of the item to edit\r\n  });\r\n\r\n  const handleLogout = () => {\r\n    alert(\"Logged out successfully!\");\r\n    window.location.href = \"/login\"; // Redirect to login page\r\n  };\r\n\r\n  const handleProfileFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfileFormData({ ...profileFormData, [name]: value });\r\n  };\r\n\r\n  const handleAvailabilityFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAvailabilityFormData({ ...availabilityFormData, [name]: value });\r\n  };\r\n\r\n  // Get the userId dynamically from the login response\r\n  useEffect(() => {\r\n    const fetchLoginResponse = async () => {\r\n      try {\r\n        const loginResponse = await axios.post(\"http://localhost:8000/loginUser\", {\r\n          username: \"test-user\", // Replace with actual username\r\n          password: \"test-password\", // Replace with actual password\r\n        });\r\n        console.log(\"Login response:\", loginResponse.data);\r\n\r\n        if (loginResponse.data && loginResponse.data.userId) {\r\n          setUserId(loginResponse.data.userId); // Dynamically set userId from response\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching login response:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLoginResponse();\r\n  }, []);\r\n\r\n  // Fetch doctor profile data based on userId\r\n  useEffect(() => {\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8000/doctor/getDoctorByEmail?email=${userId}`) // Use userId as email\r\n        .then((response) => {\r\n          setProfileData(response.data); // Populate profile data\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching profile data:\", error);\r\n        });\r\n    }\r\n  }, [userId]);\r\n\r\n  // Handle form submission to save or update the doctor's profile\r\n  const handleProfileSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/doctor/addDoctor\",\r\n        profileFormData\r\n      );\r\n      console.log(\"Response from backend:\", response.data);\r\n\r\n      // Clear the form after successful submission\r\n      setProfileFormData({\r\n        doctorId: \"\",\r\n        doctorName: \"\",\r\n        speciality: \"\",\r\n        location: \"\",\r\n        mobileNo: \"\",\r\n        email: \"\",\r\n        experience: \"\",\r\n        password: \"\",\r\n      });\r\n\r\n      // Set active tab to show updated profile\r\n      setActiveTab(\"doctorProfile\");\r\n\r\n      // Refetch profile data to reflect changes\r\n      if (userId) {\r\n        axios\r\n          .get(`http://localhost:8000/doctor/getDoctorByEmail?email=${userId}`)\r\n          .then((response) => setProfileData(response.data))\r\n          .catch((error) =>\r\n            console.error(\"Error refetching profile data:\", error)\r\n          );\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting profile data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddAvailabilitySubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Add new availability to the backend\r\n      const response = await axios.post(\r\n        \"http://localhost:8000/availability/addAvailability\",\r\n        availabilityFormData\r\n      );\r\n      console.log(\"Added Availability Response:\", response.data); // Log response from backend\r\n\r\n      // Reset the form after submission\r\n      setAvailabilityFormData({\r\n        doctorId: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        fromTime: \"\",\r\n        toTime: \"\",\r\n        index: null,\r\n      });\r\n\r\n      setActiveTab(\"\"); // Reset view\r\n    } catch (error) {\r\n      console.error(\"Error submitting availability data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditProfile = () => {\r\n    setProfileFormData(profileData); // Load existing profile data into the form\r\n    setActiveTab(\"createProfile\"); // Open the profile creation form to edit\r\n  };\r\n\r\n  const handleDeleteProfile = () => {\r\n    if (window.confirm(\"Are you sure you want to delete your profile?\")) {\r\n      setProfileData(null);\r\n      alert(\"Profile deleted successfully!\");\r\n    }\r\n  };\r\n\r\n  const handleEditAvailability = (index) => {\r\n    setAvailabilityFormData({\r\n      ...availabilityList[index],\r\n      index: index, // Track the index of the availability to be edited\r\n    });\r\n    setActiveTab(\"addAvailability\"); // Open the availability form to edit\r\n  };\r\n\r\n  const handleDeleteAvailability = (index) => {\r\n    if (window.confirm(\"Are you sure you want to delete this availability?\")) {\r\n      const updatedList = availabilityList.filter((_, i) => i !== index);\r\n      setAvailabilityList(updatedList);\r\n      alert(\"Availability deleted successfully!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"sidebar\">\r\n        <button onClick={() => setActiveTab(\"Dashboard\")}>Dashboard</button>\r\n        {profileData ? (\r\n          <button onClick={() => setActiveTab(\"doctorProfile\")}>Doctor Profile</button>\r\n        ) : (\r\n          <button onClick={() => setActiveTab(\"createProfile\")}>Create Profile</button>\r\n        )}\r\n        {availabilityList.length > 0 ? (\r\n          <button onClick={() => setActiveTab(\"viewAvailability\")}>\r\n            View Availability\r\n          </button>\r\n        ) : (\r\n          <button onClick={() => setActiveTab(\"addAvailability\")}>Add Availability</button>\r\n        )}\r\n        <button className=\"logout-button\" onClick={handleLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <h1>Welcome to Doctor Dashboard</h1>\r\n        {activeTab === \"createProfile\" && (\r\n          <form onSubmit={handleProfileSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"doctorName\"\r\n              placeholder=\"Name\"\r\n              value={profileFormData.doctorName}\r\n              onChange={handleProfileFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"speciality\"\r\n              placeholder=\"Speciality\"\r\n              value={profileFormData.speciality}\r\n              onChange={handleProfileFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              placeholder=\"Location\"\r\n              value={profileFormData.location}\r\n              onChange={handleProfileFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"mobileNo\"\r\n              placeholder=\"Mobile No\"\r\n              value={profileFormData.mobileNo}\r\n              onChange={handleProfileFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={profileFormData.email}\r\n              onChange={handleProfileFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"experience\"\r\n              placeholder=\"Experience\"\r\n              value={profileFormData.experience}\r\n              onChange={handleProfileFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={profileFormData.password}\r\n              onChange={handleProfileFormChange}\r\n              required\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n          </form>\r\n        )}\r\n        {activeTab === \"doctorProfile\" && profileData && (\r\n          <div>\r\n            <h2>Doctor Profile</h2>\r\n            <p>Name: {profileData.doctorName}</p>\r\n            <p>Speciality: {profileData.speciality}</p>\r\n            <p>Location: {profileData.location}</p>\r\n            <p>Mobile No: {profileData.mobileNo}</p>\r\n            <p>Email: {profileData.email}</p>\r\n            <p>Experience: {profileData.experience} years</p>\r\n            <button onClick={handleEditProfile}>Edit Profile</button>\r\n            <button onClick={handleDeleteProfile}>Delete Profile</button>\r\n          </div>\r\n        )}\r\n        {activeTab === \"addAvailability\" && (\r\n          <form onSubmit={handleAddAvailabilitySubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"startDate\"\r\n              placeholder=\"Start Date (YYYY-MM-DD)\"\r\n              value={availabilityFormData.startDate}\r\n              onChange={handleAvailabilityFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"endDate\"\r\n              placeholder=\"End Date (YYYY-MM-DD)\"\r\n              value={availabilityFormData.endDate}\r\n              onChange={handleAvailabilityFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"time\"\r\n              name=\"fromTime\"\r\n              placeholder=\"From Time\"\r\n              value={availabilityFormData.fromTime}\r\n              onChange={handleAvailabilityFormChange}\r\n              required\r\n            />\r\n            <input\r\n              type=\"time\"\r\n              name=\"toTime\"\r\n              placeholder=\"To Time\"\r\n              value={availabilityFormData.toTime}\r\n              onChange={handleAvailabilityFormChange}\r\n              required\r\n            />\r\n            <button type=\"submit\">\r\n              {availabilityFormData.index !== null ? \"Update\" : \"Add\"} Availability\r\n            </button>\r\n          </form>\r\n        )}\r\n        {activeTab === \"viewAvailability\" && (\r\n          <div>\r\n            <h2>Availability List</h2>\r\n            <ul>\r\n              {availabilityList.map((availability, index) => (\r\n                <li key={index}>\r\n                  <p>\r\n                    {availability.startDate} to {availability.endDate} ({availability.fromTime} - {availability.toTime})\r\n                  </p>\r\n                  <button onClick={() => handleEditAvailability(index)}>Edit</button>\r\n                  <button onClick={() => handleDeleteAvailability(index)}>Delete</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Doctordashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}