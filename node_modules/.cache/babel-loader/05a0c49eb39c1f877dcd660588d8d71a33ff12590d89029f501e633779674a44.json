{"ast":null,"code":"// src/App.js\nimport React,{useState}from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import Login from'./components/Login';import Register from'./components/Register';import Dashboard from'./components/Dashboard';import DoctorList from'./components/sections/DoctorList';import Doctordashboard from'./components/Doctordashboard';import PatientDashboard from'./components/PatientDashboard';import ShowDoctorList from'./components/ShowDoctorList';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State to hold doctor data\nconst[doctors,setDoctors]=useState([]);// Function to add a new doctor to the list\nconst addDoctor=doctor=>{setDoctors(prevDoctors=>[...prevDoctors,doctor]);};return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/doctorlist\",element:/*#__PURE__*/_jsx(DoctorList,{doctors:doctors})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(Dashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/Doctordashboard\",element:/*#__PURE__*/_jsx(Doctordashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/PatientDashboard\",element:/*#__PURE__*/_jsx(PatientDashboard,{})}),/*#__PURE__*/_jsx(Route,{path:\"/ShowDoctorList\",element:/*#__PURE__*/_jsx(ShowDoctorList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/PatientDashboard\",element:/*#__PURE__*/_jsx(\"doctorList\",{})}),/*#__PURE__*/_jsx(Route,{path:\"/PatientDashboard\",element:/*#__PURE__*/_jsx(\"bookAppointment\",{})})]})});}export default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Login","Register","Dashboard","DoctorList","Doctordashboard","PatientDashboard","ShowDoctorList","jsx","_jsx","jsxs","_jsxs","App","doctors","setDoctors","addDoctor","doctor","prevDoctors","children","path","element"],"sources":["D:/Infosys project/Infosys project/Infosys  E-doctor (2)/Infosys  E-doctor/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Dashboard from './components/Dashboard';\r\nimport DoctorList from './components/sections/DoctorList';\r\nimport Doctordashboard from './components/Doctordashboard';\r\nimport PatientDashboard from './components/PatientDashboard';\r\nimport ShowDoctorList from './components/ShowDoctorList';\r\nfunction App() {\r\n  // State to hold doctor data\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  // Function to add a new doctor to the list\r\n  const addDoctor = (doctor) => {\r\n    setDoctors((prevDoctors) => [...prevDoctors, doctor]);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/doctorlist\" element={<DoctorList doctors={doctors} />} />\r\n        <Route path=\"/dashboard\" element={<Dashboard />} />\r\n        <Route path=\"/Doctordashboard\" element={<Doctordashboard />} /> \r\n        <Route path=\"/PatientDashboard\" element={<PatientDashboard/>} />\r\n        <Route path='/ShowDoctorList' element={<ShowDoctorList />}/>\r\n        <Route path=\"/PatientDashboard\" element={<doctorList />} />\r\n        <Route path=\"/PatientDashboard\" element={<bookAppointment />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,UAAU,KAAM,kCAAkC,CACzD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,CAAAC,gBAAgB,KAAM,+BAA+B,CAC5D,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACzD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAE1C;AACA,KAAM,CAAAmB,SAAS,CAAIC,MAAM,EAAK,CAC5BF,UAAU,CAAEG,WAAW,EAAK,CAAC,GAAGA,WAAW,CAAED,MAAM,CAAC,CAAC,CACvD,CAAC,CAED,mBACEP,IAAA,CAACX,MAAM,EAAAoB,QAAA,cACLP,KAAA,CAACX,MAAM,EAAAkB,QAAA,eACLT,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEX,IAAA,CAACR,KAAK,GAAE,CAAE,CAAE,CAAC,cACtCQ,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,WAAW,CAACC,OAAO,cAAEX,IAAA,CAACP,QAAQ,GAAE,CAAE,CAAE,CAAC,cACjDO,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,aAAa,CAACC,OAAO,cAAEX,IAAA,CAACL,UAAU,EAACS,OAAO,CAAEA,OAAQ,CAAE,CAAE,CAAE,CAAC,cACvEJ,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,YAAY,CAACC,OAAO,cAAEX,IAAA,CAACN,SAAS,GAAE,CAAE,CAAE,CAAC,cACnDM,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,kBAAkB,CAACC,OAAO,cAAEX,IAAA,CAACJ,eAAe,GAAE,CAAE,CAAE,CAAC,cAC/DI,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,mBAAmB,CAACC,OAAO,cAAEX,IAAA,CAACH,gBAAgB,GAAC,CAAE,CAAE,CAAC,cAChEG,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,iBAAiB,CAACC,OAAO,cAAEX,IAAA,CAACF,cAAc,GAAE,CAAE,CAAC,CAAC,cAC5DE,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,mBAAmB,CAACC,OAAO,cAAEX,IAAA,gBAAa,CAAE,CAAE,CAAC,cAC3DA,IAAA,CAACV,KAAK,EAACoB,IAAI,CAAC,mBAAmB,CAACC,OAAO,cAAEX,IAAA,qBAAkB,CAAE,CAAE,CAAC,EAC1D,CAAC,CACH,CAAC,CAEb,CAGA,cAAe,CAAAG,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}