{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import axios from'axios';import'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[userId,setUserId]=useState('');const[password,setPassword]=useState('');const[userType,setUserType]=useState('');const navigate=useNavigate();const handleForgotPassword=()=>{alert('Forgot password functionality not implemented yet.');// You can replace this with actual logic for sending a reset link or emailing the user\n};const handleLogin=async e=>{e.preventDefault();const loginData={userId,password,userType};console.log('Login data:',loginData);try{const response=await axios.post('http://localhost:8000/loginUser',loginData);// Assuming the server response contains a \"success\" key\nif(response.data===true&&userType===\"Doctor\"){console.log('Server response:',response.data);navigate('/Doctordashboard');// Redirect to the Doctor dashboard upon successful login\n//alert('Login successful!');\n}else if(response.data===true&&userType===\"Patient\"){console.log('Server response:',response.data);navigate('/Patientdashboard');// Redirect to the Patient dashboard upon successful login\n}else{alert('Login unsuccessful. Please check your credentials.');}}catch(error){// Handling server errors or network issues\nif(error.response&&error.response.data){alert(\"Login failed: \".concat(error.response.data.message));}else{alert('An error occurred during login. Please try again later.');}console.error('Login error:',error);}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleLogin,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"userId\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"userId\",name:\"userId\",value:userId,onChange:e=>setUserId(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"userType\",children:\"Role\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"userType\",value:userType,onChange:e=>setUserType(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Role\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Patient\",children:\"Patient\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Doctor\",children:\"Doctor\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"New user? \",/*#__PURE__*/_jsx(\"a\",{href:\"/register\",children:\"Register here\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleForgotPassword,className:\"forgot-password-button\",children:\"Forgot Password?\"})]})});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Login","userId","setUserId","password","setPassword","userType","setUserType","navigate","handleForgotPassword","alert","handleLogin","e","preventDefault","loginData","console","log","response","post","data","error","concat","message","className","children","onSubmit","htmlFor","type","id","name","value","onChange","target","required","href","onClick"],"sources":["D:/Infosys project/Infosys project/Infosys  E-doctor (2)/Infosys  E-doctor/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const [userId, setUserId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userType, setUserType] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleForgotPassword = () => {\r\n    alert('Forgot password functionality not implemented yet.');\r\n    // You can replace this with actual logic for sending a reset link or emailing the user\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const loginData = { userId, password, userType };\r\n    console.log('Login data:', loginData);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/loginUser', loginData);\r\n\r\n      // Assuming the server response contains a \"success\" key\r\n      if (response.data === true && userType === \"Doctor\") {\r\n        console.log('Server response:', response.data);\r\n        navigate('/Doctordashboard'); // Redirect to the Doctor dashboard upon successful login\r\n        //alert('Login successful!');\r\n    } else if (response.data === true && userType === \"Patient\") {\r\n        console.log('Server response:', response.data);\r\n        navigate('/Patientdashboard'); // Redirect to the Patient dashboard upon successful login\r\n    } else {\r\n        alert('Login unsuccessful. Please check your credentials.');\r\n    }    \r\n    } catch (error) {\r\n      // Handling server errors or network issues\r\n      if (error.response && error.response.data) {\r\n        alert(`Login failed: ${error.response.data.message}`);\r\n      } else {\r\n        alert('An error occurred during login. Please try again later.');\r\n      }\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        <h2>Login</h2>\r\n        <label htmlFor=\"userId\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"userId\"\r\n          name=\"userId\"\r\n          value={userId}\r\n          onChange={(e) => setUserId(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"userType\">Role</label>\r\n        <select\r\n          id=\"userType\"\r\n          value={userType}\r\n          onChange={(e) => setUserType(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Select Role</option>\r\n          <option value=\"Patient\">Patient</option>\r\n          <option value=\"Doctor\">Doctor</option>\r\n        </select>\r\n        <button type=\"submit\">Login</button>\r\n        <p>New user? <a href=\"/register\">Register here</a></p>\r\n        <button type=\"button\" onClick={handleForgotPassword} className=\"forgot-password-button\">\r\n          Forgot Password?\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}