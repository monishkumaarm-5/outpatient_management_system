{"ast":null,"code":"var _jsxFileName = \"D:\\\\Infosys project\\\\Infosys project\\\\Infosys  E-doctor (2)\\\\Infosys  E-doctor\\\\src\\\\components\\\\Doctordashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Doctordashboard.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Doctordashboard = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"Dashboard\"); // Track active tab\n  const [profileData, setProfileData] = useState(null); // Doctor's profile data\n  const [availabilityList, setAvailabilityList] = useState([]); // List of availabilities\n  const [userId, setUserId] = useState(\"\"); // User ID from login response\n\n  // Profile form state\n  const [profileFormData, setProfileFormData] = useState({\n    doctorId: \"\",\n    doctorName: \"\",\n    speciality: \"\",\n    location: \"\",\n    hospitalName: \"\",\n    mobileNo: \"\",\n    email: \"\",\n    experience: \"\"\n  });\n\n  // Availability form state\n  const [availabilityFormData, setAvailabilityFormData] = useState({\n    doctorId: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    fromTime: \"\",\n    toTime: \"\",\n    index: null // To track editing index\n  });\n\n  // Fetch user ID (simulate login response)\n  useEffect(() => {\n    const fetchUserId = async () => {\n      try {\n        var _response$data;\n        const response = await axios.get(\"http://localhost:8000/loginUser\");\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.userId) {\n          setUserId(response.data.userId);\n        }\n      } catch (error) {\n        console.error(\"Error fetching user ID:\", error);\n      }\n    };\n    fetchUserId();\n  }, []);\n\n  // Fetch doctor profile by user ID\n  useEffect(() => {\n    if (userId) {\n      axios.get(`http://localhost:8000/doctor/getDoctorByEmail?email=${userId}`).then(response => setProfileData(response.data)).catch(error => console.error(\"Error fetching profile data:\", error));\n    }\n  }, [userId]);\n\n  // Handle profile form changes\n  const handleProfileFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfileFormData({\n      ...profileFormData,\n      [name]: value\n    });\n  };\n\n  // Handle profile form submission\n  const handleProfileSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:8000/doctor/addDoctor\", profileFormData);\n      if (response.status === 200 || response.status === 201) {\n        alert(\"Profile saved successfully!\");\n        setActiveTab(\"doctorProfile\");\n        setProfileFormData({\n          doctorId: \"\",\n          doctorName: \"\",\n          speciality: \"\",\n          location: \"\",\n          hospitalName: \"\",\n          mobileNo: \"\",\n          email: \"\",\n          experience: \"\"\n        });\n        // Refresh profile data\n        if (userId) {\n          const refreshedResponse = await axios.get(`http://localhost:8000/doctor/getDoctorByEmail?email=${userId}`);\n          setProfileData(refreshedResponse.data);\n        }\n      } else {\n        throw new Error(\"Failed to save profile\");\n      }\n    } catch (error) {\n      console.error(\"Error saving profile:\", error);\n      alert(\"An error occurred while saving the profile. Please try again.\");\n    }\n  };\n\n  // Handle availability form changes\n  const handleAvailabilityFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAvailabilityFormData({\n      ...availabilityFormData,\n      [name]: value\n    });\n  };\n\n  // Handle availability form submission\n  const handleAvailabilitySubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:8000/availability/addAvailability\", availabilityFormData);\n      alert(\"Availability saved successfully!\");\n      setAvailabilityFormData({\n        doctorId: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        fromTime: \"\",\n        toTime: \"\",\n        index: null\n      });\n      setActiveTab(\"viewAvailability\");\n      // Refresh availability list\n      const response = await axios.get(`http://localhost:8000/availability/getByDoctorId?doctorId=${profileData.doctorId}`);\n      setAvailabilityList(response.data);\n    } catch (error) {\n      console.error(\"Error saving availability:\", error);\n    }\n  };\n\n  // Handle profile editing\n  const handleEditProfile = () => {\n    setProfileFormData(profileData);\n    setActiveTab(\"createProfile\");\n  };\n\n  // Handle profile deletion\n  const handleDeleteProfile = async () => {\n    if (window.confirm(\"Are you sure you want to delete your profile?\")) {\n      try {\n        await axios.delete(`http://localhost:8000/doctor/deleteDoctor?doctorId=${profileData.doctorId}`);\n        setProfileData(null);\n        alert(\"Profile deleted successfully!\");\n        setActiveTab(\"Dashboard\");\n      } catch (error) {\n        console.error(\"Error deleting profile:\", error);\n      }\n    }\n  };\n\n  // Handle logout\n  const handleLogout = () => {\n    alert(\"Logged out successfully!\");\n    window.location.href = \"/login\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(Doctordashboard, \"1yInm+lTNLoq1tvX5ZYEUselLPc=\");\n_c = Doctordashboard;\nexport default Doctordashboard;\nvar _c;\n$RefreshReg$(_c, \"Doctordashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Doctordashboard","_s","activeTab","setActiveTab","profileData","setProfileData","availabilityList","setAvailabilityList","userId","setUserId","profileFormData","setProfileFormData","doctorId","doctorName","speciality","location","hospitalName","mobileNo","email","experience","availabilityFormData","setAvailabilityFormData","startDate","endDate","fromTime","toTime","index","fetchUserId","_response$data","response","get","data","error","console","then","catch","handleProfileFormChange","e","name","value","target","handleProfileSubmit","preventDefault","post","status","alert","refreshedResponse","Error","handleAvailabilityFormChange","handleAvailabilitySubmit","handleEditProfile","handleDeleteProfile","window","confirm","delete","handleLogout","href","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Infosys project/Infosys project/Infosys  E-doctor (2)/Infosys  E-doctor/src/components/Doctordashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Doctordashboard.css\";\r\nimport axios from \"axios\";\r\n\r\nconst Doctordashboard = () => {\r\n  const [activeTab, setActiveTab] = useState(\"Dashboard\"); // Track active tab\r\n  const [profileData, setProfileData] = useState(null); // Doctor's profile data\r\n  const [availabilityList, setAvailabilityList] = useState([]); // List of availabilities\r\n  const [userId, setUserId] = useState(\"\"); // User ID from login response\r\n\r\n  // Profile form state\r\n  const [profileFormData, setProfileFormData] = useState({\r\n    doctorId: \"\",\r\n    doctorName: \"\",\r\n    speciality: \"\",\r\n    location: \"\",\r\n    hospitalName: \"\",\r\n    mobileNo: \"\",\r\n    email: \"\",\r\n    experience: \"\",\r\n  });\r\n\r\n  // Availability form state\r\n  const [availabilityFormData, setAvailabilityFormData] = useState({\r\n    doctorId: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    fromTime: \"\",\r\n    toTime: \"\",\r\n    index: null, // To track editing index\r\n  });\r\n\r\n  // Fetch user ID (simulate login response)\r\n  useEffect(() => {\r\n    const fetchUserId = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8000/loginUser\");\r\n        if (response.data?.userId) {\r\n          setUserId(response.data.userId);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching user ID:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserId();\r\n  }, []);\r\n\r\n  // Fetch doctor profile by user ID\r\n  useEffect(() => {\r\n    if (userId) {\r\n      axios\r\n        .get(`http://localhost:8000/doctor/getDoctorByEmail?email=${userId}`)\r\n        .then((response) => setProfileData(response.data))\r\n        .catch((error) => console.error(\"Error fetching profile data:\", error));\r\n    }\r\n  }, [userId]);\r\n\r\n  // Handle profile form changes\r\n  const handleProfileFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfileFormData({ ...profileFormData, [name]: value });\r\n  };\r\n\r\n  // Handle profile form submission\r\n  const handleProfileSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8000/doctor/addDoctor\", profileFormData);\r\n      if (response.status === 200 || response.status === 201) {\r\n        alert(\"Profile saved successfully!\");\r\n        setActiveTab(\"doctorProfile\");\r\n        setProfileFormData({\r\n          doctorId: \"\",\r\n          doctorName: \"\",\r\n          speciality: \"\",\r\n          location: \"\",\r\n          hospitalName: \"\",\r\n          mobileNo: \"\",\r\n          email: \"\",\r\n          experience: \"\",\r\n        });\r\n        // Refresh profile data\r\n        if (userId) {\r\n          const refreshedResponse = await axios.get(\r\n            `http://localhost:8000/doctor/getDoctorByEmail?email=${userId}`\r\n          );\r\n          setProfileData(refreshedResponse.data);\r\n        }\r\n      } else {\r\n        throw new Error(\"Failed to save profile\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving profile:\", error);\r\n      alert(\"An error occurred while saving the profile. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Handle availability form changes\r\n  const handleAvailabilityFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setAvailabilityFormData({ ...availabilityFormData, [name]: value });\r\n  };\r\n\r\n  // Handle availability form submission\r\n  const handleAvailabilitySubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post(\r\n        \"http://localhost:8000/availability/addAvailability\",\r\n        availabilityFormData\r\n      );\r\n      alert(\"Availability saved successfully!\");\r\n      setAvailabilityFormData({\r\n        doctorId: \"\",\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n        fromTime: \"\",\r\n        toTime: \"\",\r\n        index: null,\r\n      });\r\n      setActiveTab(\"viewAvailability\");\r\n      // Refresh availability list\r\n      const response = await axios.get(\r\n        `http://localhost:8000/availability/getByDoctorId?doctorId=${profileData.doctorId}`\r\n      );\r\n      setAvailabilityList(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error saving availability:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle profile editing\r\n  const handleEditProfile = () => {\r\n    setProfileFormData(profileData);\r\n    setActiveTab(\"createProfile\");\r\n  };\r\n\r\n  // Handle profile deletion\r\n  const handleDeleteProfile = async () => {\r\n    if (window.confirm(\"Are you sure you want to delete your profile?\")) {\r\n      try {\r\n        await axios.delete(\r\n          `http://localhost:8000/doctor/deleteDoctor?doctorId=${profileData.doctorId}`\r\n        );\r\n        setProfileData(null);\r\n        alert(\"Profile deleted successfully!\");\r\n        setActiveTab(\"Dashboard\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting profile:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    alert(\"Logged out successfully!\");\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* Sidebar */}\r\n      {/* ... Sidebar content ... */}\r\n      {/* Main Content */}\r\n      {/* ... Main content logic ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Doctordashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}